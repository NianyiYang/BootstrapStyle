<?xml version="1.0" encoding="utf-8"?>
<!--- 

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Except as contained in this notice, the Software shall not be used in any commercial purposes.

@author NigelYang	
@version 1.0
-->
<s:SparkSkin 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	alpha.disabled="0.5" alpha.disabledAndSelected="0.5"
	>
	
	<!-- host component -->
	<fx:Metadata>
		<![CDATA[ 
		
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.CheckBox")]
		
		]]>
	</fx:Metadata>
	
	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over" stateGroups="overStates" />
		<s:State name="down" stateGroups="downStates" />
		<s:State name="disabled" stateGroups="disabledStates" />
		<s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
		<s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
		<s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
		<s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
	</s:states>
	
	<!-- Transition -->
	<s:transitions>
		
		<s:Transition fromState="up" toState="over" >
			<s:AnimateColor duration="500" targets="{[ sc ]}" />
		</s:Transition> 
		
		<s:Transition fromState="over" toState="up" >
			<s:AnimateColor duration="500" targets="{[ sc ]}" />
		</s:Transition> 
		
		<s:Transition fromState="over" toState="down" >
			<s:AnimateColor duration="500" targets="{[ sc ]}" />
		</s:Transition> 
		
		<s:Transition fromState="down" toState="overAndSelected" >
			<s:AnimateColor duration="500" targets="{[ sc ]}" />
		</s:Transition> 
		
		<s:Transition fromState="upAndSelected" toState="overAndSelected" >
			<s:AnimateColor duration="500" targets="{[ sc ]}" />
		</s:Transition> 
		
		<s:Transition fromState="overAndSelected" toState="upAndSelected" >
			<s:AnimateColor duration="500" targets="{[ sc ]}" />
		</s:Transition> 
		
		<s:Transition fromState="overAndSelected" toState="downAndSelected" >
			<s:AnimateColor duration="500" targets="{[ sc ]}" />
		</s:Transition> 
		
		<s:Transition fromState="downAndSelected" toState="over" >
			<s:AnimateColor duration="500" targets="{[ sc ]}" />
		</s:Transition> 
		
	</s:transitions>
	
	<!-- background --> 
	<s:Rect 
		top="0" left="0" 
		width="15" height="15" 
		radiusX="2" radiusY="2"
		>
		
		<s:filters>
			<s:DropShadowFilter alpha="0.5" blurX="0" blurY="0" distance="1" strength="1" strength.down="0" strength.downAndSelected="0" />
		</s:filters>
		
		<s:fill>
			<s:SolidColor id="sc" color="0xefefef" color.upAndSelected="0x0e90d2"  
						  color.over="0xeaeaea" color.overAndSelected="0x0c79b1" 
						  color.down="0xb3b3b3" color.downAndSelected="0x0a628f"/>
		</s:fill>
		
	</s:Rect>
	
	<!-- selectedStates -->
	<s:Group id="checkedMark" includeIn="selectedStates" x="2" y="3">
		
		<s:Path 
			horizontalCenter="0" verticalCenter="0" 
			width="11" height="11" winding="nonZero" 
			data="M 100 0 C 75.148 24.853 46.191 87.574 46.191 87.574 C 46.191 87.574 14.204 40.716 0 40.716 L 25.11 41.012 L 43.787 62.213 L 79.29 0 L 100 0 Z" >
			
			<s:fill>
				<s:SolidColor color="0xFFFFFF" color.over="0xFFFFFF" />
			</s:fill>
			
		</s:Path>
		
	</s:Group>
	
	<s:Group includeIn="up,over,down,disabled" x="2" y="3">
		
		<s:Rect x="2" y="1" width="8" height="8" radiusX="2" radiusY="2">
			
			<s:fill>
				<s:SolidColor color="0x666666" color.over="0xCCCCCC" />
			</s:fill>
			
		</s:Rect>
		
	</s:Group>

	
	<!-- Label -->
	<!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
	<s:Label id="labelDisplay"
			 textAlign="start"
			 verticalAlign="middle"
			 maxDisplayedLines="1"
			 left="18" right="0" top="3" bottom="3" verticalCenter="2" />
	
</s:SparkSkin>
